#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO

        macro_ver: macro_ver {
            compatible = "zmk,behavior-macro";
            label = "macro_version";
            #binding-cells = <0>;
            bindings = <&kp RET>;
        };

        #endif

        e_acute: e_acute {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(E) &kp E>;
            label = "E_ACUTE";
        };

        e_grave: e_grave {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(GRAVE) &kp E>;
            label = "E_GRAVE";
        };

        u_grave: u_grave {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(GRAVE) &kp U>;
            label = "U_GRAVE";
        };

        a_grave: a_grave {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(GRAVE) &kp A>;
            label = "A_GRAVE";
        };

        e_circum: e_circum {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(I) &kp E>;
            label = "E_CIRCUM";
        };

        o_circum: o_circum {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(I) &kp O>;
            label = "O_CIRCUM";
        };

        fat_arrow: fat_arrow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp GREATER_THAN>;
            label = "FAT_ARROW";
        };

        slim_arrow: slim_arrow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp MINUS &kp GREATER_THAN>;
            label = "SLIM_ARROW";
        };

        hml: homerow_mods_l {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_L";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <7 8 9 10 11 12 13 21 22 23 24 25 26 27 38 39 40 41 42 43 44 45 54 55 56 57 58 59 69 70 71 72 73 74 75 35 36 37 38 52 53 65 66 69 70 67 68>;
        };

        hmr: homerow_mods_r {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_R";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <0 1 2 3 4 5 6 14 15 16 17 18 19 20 28 29 30 31 32 33 34 35 36 46 47 48 49 50 51 52 60 61 62 63 64 65 66 67 37 38 53 69 70 68>;
        };

        ltr: layer_tap_right {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_RIGHT";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 5 6 14 15 16 17 18 19 20 28 29 30 31 32 33 34 35 36 46 47 48 49 50 51 52 60 61 62 63 64 65 66 67 37 38 53 68 69 70>;
            require-prior-idle-ms = <175>;
        };

        ltl: layer_tap_left {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_LEFT";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
            hold-trigger-key-positions = <7 8 9 10 11 12 13 21 22 23 24 25 26 27 35 36 37 38 39 40 41 42 43 44 45 52 53 54 55 56 57 58 59 67 68 69 70 71 72 73 74 75 65 66>;
            require-prior-idle-ms = <175>;
        };
    };

    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp EQUAL  &kp N1        &kp N2           &kp N3           &kp N4             &kp N5  &tog 1                                                           &mo 3                     &kp N6  &kp N7              &kp N8            &kp N9            &kp N0                &kp MINUS
&kp TAB    &kp Q         &kp W            &ltl 2 E         &kp R              &kp T   &none                                                            &none                     &kp Y   &kp U               &ltr 2 I          &kp O             &kp P                 &kp BSLH
&kp ESC    &hml LCTRL A  &hml LEFT_ALT S  &hml LEFT_GUI D  &hml LEFT_SHIFT F  &kp G   &kp INT_MUHENKAN  &kp LCTRL  &kp LALT      &kp LGUI   &kp RCTRL  &kp INT_KATAKANAHIRAGANA  &kp H   &hmr RIGHT_SHIFT J  &hmr RIGHT_GUI K  &hmr RIGHT_ALT L  &hmr RCTRL SEMICOLON  &kp SQT
&kp LSHFT  &kp Z         &kp X            &kp C            &kp V              &kp B                                &kp HOME      &kp PG_UP                                       &kp N   &kp M               &kp COMMA         &kp DOT           &kp FSLH              &kp RSHFT
&mo 2      &kp GRAVE     &kp CAPS         &kp LEFT         &kp RIGHT                  &kp BSPC          &kp DEL    &kp END       &kp PG_DN  &kp ENTER  &kp SPACE                         &kp DOWN            &kp UP            &kp LBKT          &kp RBKT              &mo 2
            >;
        };

        keypad {
            bindings = <
&kp EQUAL  &kp CARET  &e_circum     &e_acute              &e_grave           &kp DOLLAR      &trans                                                   &mo 3           &kp N6         &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
&kp TAB    &u_grave   &kp HASH      &kp LEFT_BRACE        &kp RIGHT_BRACE    &kp BACKSLASH   &none                                                    &kp LA(LS(N2))  &kp LA(Y)      &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp KP_MINUS     &kp BSLH
&kp ESC    &a_grave   &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RPAR           &kp AMPERSAND   &none     &kp LCTRL  &kp LALT      &kp LGUI   &kp RCTRL  &none           &kp PERCENT    &kp KP_N4   &kp KP_N5     &kp KP_N6      &kp KP_PLUS      &kp SQT
&kp LSHFT  &o_circum  &kp AT_SIGN   &kp LEFT_BRACKET      &kp RIGHT_BRACKET  &kp UNDERSCORE                       &kp HOME      &kp PG_UP                             &kp LA(LS(R))  &kp KP_N1   &kp KP_N2     &kp KP_N3      &kp KP_ENTER     &kp RSHFT
&mo 2      &kp GRAVE  &kp CAPS      &kp LESS_THAN         &kp GREATER_THAN                   &kp BSPC  &kp DEL    &kp END       &kp PG_DN  &kp ENTER  &kp KP_N0                      &kp UP      &kp DOWN      &kp KP_DOT     &kp RBKT         &mo 2
            >;
        };

        fn {
            bindings = <
&kp F1  &kp F2     &kp F3     &kp F4             &kp F5    &kp F6  &tog 1                                      &mo 3   &kp F7            &kp F8                &kp F9                 &kp F10       &kp F11         &kp F12
&trans  &kp LA(Q)  &o_circum  &kp DOUBLE_QUOTES  &u_grave  &trans  &none                                       &none   &kp CARET         &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp PERCENT   &kp DOLLAR      &trans
&trans  &a_grave   &e_circum  &e_acute           &e_grave  &trans  &none   &trans  &trans      &trans  &trans  &none   &kp AMPERSAND     &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp ASTERISK  &kp SLASH       &kp PIPE
&trans  &trans     &trans     &kp LA(C)          &trans    &trans                  &trans      &trans                  &kp LEFT_BRACKET  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp POUND     &kp UNDERSCORE  &kp MINUS
&trans  &trans     &trans     &trans             &trans            &trans  &trans  &trans      &trans  &trans  &trans                    &kp LESS_THAN         &kp GREATER_THAN       &slim_arrow   &fat_arrow      &kp EQUAL
            >;
        };

        mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &macro_ver    &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };
    };
};
